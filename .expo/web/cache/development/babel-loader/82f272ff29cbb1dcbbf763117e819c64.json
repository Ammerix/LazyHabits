{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Input from \"../components/Input\";\nimport authenticationService from \"../services/authentication.service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthenticationForm = function (_Component) {\n  _inherits(AuthenticationForm, _Component);\n\n  var _super = _createSuper(AuthenticationForm);\n\n  function AuthenticationForm() {\n    var _this;\n\n    _classCallCheck(this, AuthenticationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      login: \"\",\n      password: \"\"\n    };\n\n    _this.onChangeLogin = function (login) {\n      _this.setState({\n        login: login\n      });\n    };\n\n    _this.onChangePassword = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.signIn = function () {\n      var credentials = _this.state.login + \"/\" + _this.state.password;\n      var user = authenticationService.authenticate(_this.state.login, _this.state.password);\n      var msg = user !== null ? \"Connexion réussie\" : \"Erreur de connexion\";\n      msg += \"avec les identifiants : \" + credentials;\n      Alert.alert(\"Action sélectionnée\", msg);\n    };\n\n    _this.resetPassword = function () {\n      Alert.alert(\"Action sélectionnée\", \"Mise à jour du mot de passe\");\n    };\n\n    _this.signUp = function () {\n      Alert.alert(\"Action sélectionnée\", \"Inscription\");\n    };\n\n    return _this;\n  }\n\n  _createClass(AuthenticationForm, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.formImage,\n          source: require(\"../assets/logo.png\")\n        }), _jsx(Input, {\n          placeholder: \"Email\",\n          imageUrl: \"https://img.icons8.com/doodle/48/000000/email-sign.png\",\n          hideCharacters: false,\n          onChangeText: this.onChangeLogin\n        }), _jsx(Input, {\n          placeholder: \"Mot de passe\",\n          imageUrl: \"https://img.icons8.com/ultraviolet/40/000000/key.png\",\n          hideCharacters: true,\n          onChangeText: this.onChangePassword\n        }), _jsx(TouchableOpacity, {\n          style: [styles.buttonContainer, styles.signInButton],\n          onPress: this.signIn,\n          children: _jsx(Text, {\n            style: styles.loginText,\n            children: \"Se connecter\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonContainer,\n          onPress: this.resetPassword,\n          children: _jsx(Text, {\n            children: \"Mot de passe oubli\\xE9 ?\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonContainer,\n          onPress: this.signUp,\n          children: _jsx(Text, {\n            children: \"S'inscrire\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return AuthenticationForm;\n}(Component);\n\nexport { AuthenticationForm as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"lightgrey\"\n  },\n  formImage: {\n    borderBottomWidth: 1,\n    width: 100,\n    height: 100,\n    marginBottom: 20\n  },\n  buttonContainer: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 250,\n    borderRadius: 30\n  },\n  signInButton: {\n    backgroundColor: \"skyblue\"\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/emmamarqueton/Desktop/LazyHabitsDossier/LazyHabits/screens/AuthenticationFormScreen.tsx"],"names":["React","Component","Input","authenticationService","AuthenticationForm","state","login","password","onChangeLogin","setState","onChangePassword","signIn","credentials","user","authenticate","msg","Alert","alert","resetPassword","signUp","styles","container","formImage","require","buttonContainer","signInButton","loginText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomWidth","width","height","marginBottom","borderRadius","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  Alert,\n} from \"react-native\";\nimport Input from \"../components/Input\";\nimport authenticationService, {\n  User,\n} from \"../services/authentication.service\";\n\ninterface AuthenticationFormState {\n  login: string;\n  password: string;\n}\n\nexport default class AuthenticationForm extends Component<\n  {},\n  AuthenticationFormState\n> {\n  //Initial state\n  state: AuthenticationFormState = {\n    login: \"\",\n    password: \"\",\n  };\n\n  onChangeLogin = (login: string) => {\n    this.setState({ login });\n  };\n\n  onChangePassword = (password: string) => {\n    this.setState({ password });\n  };\n\n  // A REVOIR AVEC REACT FIREBASE\n  signIn = () => {\n    const credentials = this.state.login + \"/\" + this.state.password; //clé d'authentification\n    const user = authenticationService.authenticate(\n      this.state.login,\n      this.state.password\n    );\n    let msg = user !== null ? \"Connexion réussie\" : \"Erreur de connexion\";\n    msg += `avec les identifiants : ${credentials}`;\n    Alert.alert(\"Action sélectionnée\", msg);\n  };\n\n  // A REVOIR AVEC REACT FIREBASE\n  resetPassword = () => {\n    Alert.alert(\"Action sélectionnée\", \"Mise à jour du mot de passe\");\n  };\n\n  // A REVOIR AVEC REACT FIREBASE\n  signUp = () => {\n    Alert.alert(\"Action sélectionnée\", \"Inscription\");\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image\n          style={styles.formImage}\n          source={require(\"../assets/logo.png\")}\n        />\n        <Input\n          placeholder=\"Email\"\n          imageUrl=\"https://img.icons8.com/doodle/48/000000/email-sign.png\"\n          hideCharacters={false}\n          onChangeText={this.onChangeLogin}\n        />\n        <Input\n          placeholder=\"Mot de passe\"\n          imageUrl=\"https://img.icons8.com/ultraviolet/40/000000/key.png\"\n          hideCharacters={true}\n          onChangeText={this.onChangePassword}\n        />\n        <TouchableOpacity\n          style={[styles.buttonContainer, styles.signInButton]}\n          onPress={this.signIn}\n        >\n          <Text style={styles.loginText}>Se connecter</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.buttonContainer}\n          onPress={this.resetPassword}\n        >\n          <Text>Mot de passe oublié ?</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.buttonContainer} onPress={this.signUp}>\n          <Text>S'inscrire</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"lightgrey\",\n  },\n  formImage: {\n    borderBottomWidth: 1,\n    width: 100,\n    height: 100,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 250,\n    borderRadius: 30,\n  },\n  signInButton: {\n    backgroundColor: \"skyblue\",\n  },\n  loginText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}