{"ast":null,"code":"import React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeStackScreen, DressingStackScreen, AddStackScreen } from \"./app-stacks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport var TabNavigator = function TabNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home-sharp\" : \"ios-home-outline\";\n            } else if (route.name === \"Dressing\") {\n              iconName = focused ? \"ios-list-sharp\" : \"ios-list-outline\";\n            } else if (route.name === \"Add\") {\n              iconName = focused ? \"ios-add-circle-sharp\" : \"ios-add-circle-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Dressing\",\n        component: DressingStackScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Add\",\n        component: AddStackScreen\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["/Users/emmamarqueton/Desktop/LazyHabitsDossier/LazyHabits/navigation/tab-navigation.tsx"],"names":["React","Ionicons","NavigationContainer","createBottomTabNavigator","HomeStackScreen","DressingStackScreen","AddStackScreen","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAEIC,eAFJ,EAGIC,mBAHJ,EAIIC,cAJJ;;;AAQA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;AACA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SACI,KAAC,mBAAD;AAAA,cACI,MAAC,GAAD,CAAK,SAAL;AACI,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC3BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACtC,gBAAIC,QAAJ;;AAEA,gBAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACvBD,cAAAA,QAAQ,GAAGH,OAAO,GACZ,gBADY,GAEZ,kBAFN;AAGH,aAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAClCD,cAAAA,QAAQ,GAAGH,OAAO,GACZ,gBADY,GAEZ,kBAFN;AAGH,aAJM,MAIA,IAAIF,KAAK,CAACM,IAAN,KAAe,KAAnB,EAA0B;AAC7BD,cAAAA,QAAQ,GAAGH,OAAO,GACZ,sBADY,GAEZ,wBAFN;AAGH;;AAGD,mBACI,KAAC,QAAD;AACI,cAAA,IAAI,EAAEG,QADV;AAEI,cAAA,IAAI,EAAED,IAFV;AAGI,cAAA,KAAK,EAAED;AAHX,cADJ;AAOH;AA1B0B,SAAhB;AAAA,OADnB;AAAA,iBAmCI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAER;AAAnC,QAnCJ,EAoCI,KAAC,GAAD,CAAK,MAAL;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,SAAS,EAAEC;AAFf,QApCJ,EAwCI,KAAC,GAAD,CAAK,MAAL;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,SAAS,EAAEC;AAFf,QAxCJ;AAAA;AADJ,IADJ;AAiDH,CAlDM","sourcesContent":["import React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n    RootStackParamList,\n    HomeStackScreen,\n    DressingStackScreen,\n    AddStackScreen,\n} from \"./app-stacks\";\n\n// Define main tab navigator\nconst Tab = createBottomTabNavigator<RootStackParamList>();\nexport const TabNavigator = () => {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator\n                screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        let iconName: any; // TODO: find better type\n\n                        if (route.name === \"Home\") {\n                            iconName = focused\n                                ? \"ios-home-sharp\"\n                                : \"ios-home-outline\";\n                        } else if (route.name === \"Dressing\") {\n                            iconName = focused\n                                ? \"ios-list-sharp\"\n                                : \"ios-list-outline\";\n                        } else if (route.name === \"Add\") {\n                            iconName = focused\n                                ? \"ios-add-circle-sharp\"\n                                : \"ios-add-circle-outline\";\n                        }\n\n                        // You can return any component that you like here!\n                        return (\n                            <Ionicons\n                                name={iconName}\n                                size={size}\n                                color={color}\n                            />\n                        );\n                    },\n                })}\n                /*\n                tabBarOptions={{\n                    activeTintColor: \"tomato\",\n                    inactiveTintColor: \"gray\",\n                }}*/\n            >\n                <Tab.Screen name=\"Home\" component={HomeStackScreen} />\n                <Tab.Screen\n                    name=\"Dressing\"\n                    component={DressingStackScreen}\n                />\n                <Tab.Screen\n                    name=\"Add\"\n                    component={AddStackScreen}\n                />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}