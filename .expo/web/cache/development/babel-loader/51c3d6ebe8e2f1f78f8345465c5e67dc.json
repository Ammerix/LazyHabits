{"ast":null,"code":"import React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeStackScreen } from \"./app-stacks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport var TabNavigator = function TabNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home-sharp\" : \"ios-home-outline\";\n            } else if (route.name === \"Dressing\") {\n              iconName = focused ? \"ios-grid-sharp\" : \"ios-grid-outline\";\n            } else if (route.name === \"Add\") {\n              iconName = focused ? \"ios-add-circle-sharp\" : \"ios-add-circle-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person-sharp\" : \"ios-person-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen\n      })\n    })\n  });\n};","map":{"version":3,"sources":["/Users/emmamarqueton/Desktop/LazyHabitsDossier/LazyHabits/navigation/tab-navigation.tsx"],"names":["React","Ionicons","NavigationContainer","createBottomTabNavigator","HomeStackScreen","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAEEC,eAFF;;AASA,IAAMC,GAAG,GAAGF,wBAAwB,EAApC;AACA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SACE,KAAC,mBAAD;AAAA,cACE,KAAC,GAAD,CAAK,SAAL;AACE,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC7BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACxC,gBAAIC,QAAJ;;AAEA,gBAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,kBAAxC;AACD,aAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AACpCD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,kBAAxC;AACD,aAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,KAAnB,EAA0B;AAC/BD,cAAAA,QAAQ,GAAGH,OAAO,GACd,sBADc,GAEd,wBAFJ;AAGD,aAJM,MAIA,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,kBAAH,GAAwB,oBAA1C;AACD;;AAGD,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEG,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACD;AAlB4B,SAAhB;AAAA,OADjB;AAAA,gBAuBE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEN;AAAnC;AAvBF;AADF,IADF;AA8BD,CA/BM","sourcesContent":["import React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  RootStackParamList,\n  HomeStackScreen,\n  DressingStackScreen,\n  AddStackScreen,\n  ProfileStackScreen,\n} from \"./app-stacks\";\n\n// Define main tab navigator\nconst Tab = createBottomTabNavigator<RootStackParamList>();\nexport const TabNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName: any; // TODO: find better type\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home-sharp\" : \"ios-home-outline\";\n            } else if (route.name === \"Dressing\") {\n              iconName = focused ? \"ios-grid-sharp\" : \"ios-grid-outline\";\n            } else if (route.name === \"Add\") {\n              iconName = focused\n                ? \"ios-add-circle-sharp\"\n                : \"ios-add-circle-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person-sharp\" : \"ios-person-outline\";\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n       \n      >\n        <Tab.Screen name=\"Home\" component={HomeStackScreen} />\n\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}